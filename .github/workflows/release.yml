name: Release

on:
  push:
    tags:
      - 'v*' # 当推送v开头的tag时触发，如 v1.0.0

permissions:
  contents: write # 需要写权限来创建release

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # 定义要构建的目标平台
        include:
          - goos: linux
            goarch: amd64
            suffix: linux-amd64
          - goos: linux
            goarch: arm64
            suffix: linux-arm64
          - goos: windows
            goarch: amd64
            suffix: windows-amd64.exe
          - goos: darwin
            goarch: amd64
            suffix: darwin-amd64
          - goos: darwin
            goarch: arm64
            suffix: darwin-arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.3'

    - name: Download dependencies
      run: go mod download

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 0
      run: |
        mkdir -p dist
        # 获取版本信息
        VERSION=${GITHUB_REF#refs/tags/}
        COMMIT=$(git rev-parse --short HEAD)
        BUILD_TIME=$(date -u '+%Y-%m-%d %H:%M:%S UTC')
        
        # 构建时注入版本信息
        go build \
          -ldflags="-s -w -X 'main.Version=${VERSION}' -X 'main.GitCommit=${COMMIT}' -X 'main.BuildTime=${BUILD_TIME}'" \
          -o dist/tReader-${{ matrix.suffix }} .

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: tReader-${{ matrix.suffix }}
        path: dist/tReader-${{ matrix.suffix }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist

    - name: Prepare release files
      run: |
        cd dist
        # 将所有二进制文件移到同一目录
        find . -name "tReader-*" -type f -exec mv {} . \;
        # 清理空目录
        find . -type d -empty -delete
        ls -la

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/tReader-*
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 